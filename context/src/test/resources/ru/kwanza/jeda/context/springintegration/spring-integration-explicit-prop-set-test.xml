<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:jeda-core="http://www.kwanza-systems.ru/schema/jeda-core"
       xmlns:jeda-jeconnection="http://www.kwanza-systems.ru/schema/jeda-jeconnection"
       xmlns:jeda-context="http://www.kwanza-systems.ru/schema/jeda-context"
       xmlns:util="http://www.springframework.org/schema/util"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
               http://www.springframework.org/schema/beans/spring-beans-3.0.xsd
               http://www.kwanza-systems.ru/schema/jeda-core http://www.kwanza-systems.ru/schema/jeda-core.xsd
               http://www.kwanza-systems.ru/schema/jeda-context http://www.kwanza-systems.ru/schema/jeda-context.xsd
               http://www.springframework.org/schema/util http://www.springframework.org/schema/util/spring-util.xsd">

    <import resource="classpath:jeda-core-config.xml"/>
    <import resource="classpath:pendingstore-logonly-config.xml"/>
    <import resource="classpath:autokey-mock-config.xml"/>
    <import resource="classpath:dbtool-config.xml"/>
    <import resource="classpath:jeda-context-jdbc-config.xml"/>
    <import resource="classpath:jeda-context-berkeley-config.xml"/>
    <import resource="classpath:jeda-clusterservice-mock-config.xml"/>

    <bean id="jtaTransactionManager"
          class="com.atomikos.icatch.jta.AtomikosTransactionManager"
          init-method="init" destroy-method="close">
        <property name="forceShutdown" value="true"/>
    </bean>

    <jeda-context:jdbc-blob-context-controller
            tableName="table_name" terminator="termName" idColumnName="id" versionColumnName="version"
            terminatorColumnName="terminator" dbTool="dbtool.DBTool" versionGenerator="dbtool.VersionGenerator"/>

    <jeda-context:jdbc-blob-context-controller-with-dict
            dictionaryTableName="ctx_dictionary" dictionaryPropertyColumnName="name" dictionaryIdColumnName="id"
            terminator="terminator" tableName="table_name" idColumnName="id" versionColumnName="version"
            terminatorColumnName="terminator" dbTool="dbtool.DBTool" versionGenerator="dbtool.VersionGenerator"/>

    <jeda-context:jdbc-object-context-controller
            clazz="ru.kwanza.jeda.context.TestObject" tableColumnByPropertyName="myMap" terminator="termName"
            terminatorColumnName="terminator" idColumnName="id" tableName="table_name" versionColumnName="version"
            dbTool="dbtool.DBTool" versionGenerator="dbtool.VersionGenerator"/>
    <util:map id="myMap">
        <entry key="data1" value="data_1" />
        <entry key="data2" value="data_2" />
    </util:map>

    <jeda-context:berkeley-blob-context-controller
            connectionFactory="jeConnectionFactory" databaseName="test_db" terminator="termName"
            versionGenerator="dbtool.VersionGenerator"/>

    <jeda-context:berkeley-blob-context-controller-with-dict
            connectionFactory="jeConnectionFactory" dictionaryTableName="dict_table" databaseName="db_name"
            versionGenerator="dbtool.VersionGenerator" terminator="termName"/>

    <bean id="jeConnectionFactory"
          class="ru.kwanza.jeda.jeconnection.JEConnectionFactory" destroy-method="destroy">
        <constructor-arg ref="ru.kwanza.jeda.api.internal.ISystemManager"/>
        <property name="lockingTimeout" value="1000"/>
        <property name="path" value="./target/berkeley_db/"/>
    </bean>

    <bean id="propertyPlaceholderConfigurer1"
          class="org.springframework.beans.factory.config.PropertyPlaceholderConfigurer">
        <property name="locations">
            <list>
                <value>classpath:db_mssql.properties</value>
            </list>
        </property>
    </bean>

    <bean id="dataSource" destroy-method="close" class="org.apache.commons.dbcp.BasicDataSource">
        <property name="driverClassName" value="${dbunit.driverClass}"/>
        <property name="url" value="${dbunit.connectionUrl}"/>
        <property name="username" value="${dbunit.username}"/>
        <property name="password" value="${dbunit.password}"/>
    </bean>

</beans>